
1) 
activation-group:
The activation-group will cause that only one rule get executed and 
  *) the one with higher salience will be executed if it is activated. 
There can be a single rule or multiple rules that can belong to a particular activation-group. 
Rules that belong to activation-group fire in similar fashion to 
  "if..else if..else" block in java. 
In an activation group only one rule can fire at a time  

Example:
rule "R1"
salience 1
activation-group "ag-1"
	when 
		...
	then
		...
	end
  
rule "R2"
salience 2
activation-group "ag-1"
	when 
		..
	then
		...
	end

Here, with the activation group R2 will be fired, as it has higher sailence then of R1


2)  
agenda-group:This is an optional keyword. 
  It can be assigned for all rules. If not assigned to any agenda group, the rule by default belongs to ‘main’ agenda.
  In this, only set of surels get fired which belongs to specific activation-group that's in focus.
  
  At any one time, only one group has a focus that gives that group of rules priority for execution 
  before rules in other agenda groups. You determine the focus with a setFocus() call for the agenda group

Agenda agenda = ksession.getAgenda();
agenda.getAgendaGroup( "ag-1" ).setFocus();
agenda.getAgendaGroup( "ag-2" ).setFocus();
ksession.fireAllRules();

3)
ruleflow-group: This behaves exactly similar to agenda-group, 
  except that it is generally used for rules used from jBPM process flows.
  
  Eg. When building workflow or Business process asset this is linked to a Service task, which activates set of rules
  
  
4) lock-on-active
 A boolean value applicable to rules with ruleflow-group or agenda-group
 This option, the next time the ruleflow group for the rule becomes active 
             or the agenda group for the rule receives a focus,
             
       the rule cannot be activated
    To reactivate the rule, ruleflow-group must be inactive or particular ageda-group must loose the focus
    
** This is stronger version of no-loop attribute, the activation of a matching rule is discarded regardless of the origin of the update
[[ Ideal use- You have number of rules that modify a fact and don't want to re-execute the rule again on updates ]]

Example: lock-on-active true

5) date-effective
Rule will be activated only after current date and time is after the parameters given with the option
Example: date-effective "01-Jan-2020"


6) date-expires
The rule won't be activated once the current date and time is after the parameters given with the option
Example: date-expires "01-Jan-2020"


7) no-loop
A boolean value, a rule can't be activated as a result of met condition once facts has been updated
Example: no-loop true


8) duration
A long value, e duration of time in milliseconds after which the rule can be activated even the conditions are met
Example: duration 10000   // The value is in milliseconds

9) dialect
A string identifying either JAVA or MVEL as the language to be used for code.
This is rule level option, to update the option other than package
Defaults to - "JAVA"

Example: dialect "JAVA"

10) salience
An integer value that defines the priority of the rule, higher the value higher the priority
Example: salience 100
Example: salience 10 is smaller than Example: salience 100 which means, rule with sailence 100 will executed first and ...

11) enabled
A boolean value, to define if the rule is enabled or not. Defaults true

Example: enabled true

12) timer
A string, specifies the cron or int timer refers to schedule when the rule will be active
Example: timer ( cron:*/2 * * * * ? ) (every 2 seconds)

13) calendar
similar to timer but a quartz scheduler
Example: calendars "* * 0-7,18-23 ? * *"




Kie Server Scaling -

Controller in turn will have three server templates - HR, Finance and IT. Each server template is then defined with identifier 
which is used by KIE Server instances via system property called org.kie.server.id.


===================

RESTful KIE - API kjar deployment

{
  "config-items": [
    {
      "itemName": "RuntimeStrategy",
      "itemValue": "SINGLETON",
      "itemType": "java.lang.String"
    },
    {
      "itemName": "MergeMode",
      "itemValue": "MERGE_COLLECTIONS",
      "itemType": "java.lang.String"
    },
    {
      "itemName": "KBase",
      "itemValue": "",
      "itemType": "java.lang.String"
    },
    {
      "itemName": "KSession",
      "itemValue": "",
      "itemType": "java.lang.String"
    }
  ],
  "release-id": {
    "group-id": "com.myspace",
    "artifact-id": "DemoRule",
    "version": "1.0.0-SNAPSHOT"
  },
  "scanner": {
    "poll-interval": "5000",
    "status": "STARTED"
  }
}

PUT http://localhost:8080/kie-server/services/rest/server/containers/DemoRule_1.0.0-SNAPSHOT

+
Authorization = Basic(User, Passowrd)
