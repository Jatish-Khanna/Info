The Java SE 8 Features 


Write interfaces with default and static methods

Apply Repeating Annotations

Work with Date/Time API

Develop Functional Interfaces

Apply Lambda Expressions

Work with Streams API

Make use of Optional class

Nashorn JS API

Spliterator

Type	Functional Interface	Abstract Method	Description
Function	Function<T, R>	R apply(T t)	
Function that accepts single argument and produces result  

Predicate	Predicate<T>	boolean test(T t)	Boolean-valued function that takes single argument
Consumer	Consumer<T>	void accept(T t)	Function that accepts single argument but returns no result
Supplier	Supplier<T>	T get()	Function that denotes a supplier of results




Summary of maven targets
Reporting and Tool Plugin
Description
checkstype

It creates a checkstyle report for the project

javadoc

It generates Javadoc report for the project

project-info-reports

It generates standard project reports for project

surefire-report

It generates results report for  unit tests in project

help

It retrieves information about the deployable environment of the project




----------------------------------------------

What are the benefits of multiple features in Java-8
 - Support for functional programmaing by Lamda and streams
 - Ease of high volume data processing by streams
 - Ease of use by getting parameter names by reflection
 - Reusable code with enhanced Collections API
 - Smart Exception handling with Optional
 - Encryption with Base64
 - Nashorn engine support for JS
 
Lambda Expression?
  It is an anonymous function
  The method that doesn't need accessmodifiers, name or return value
  This can be passed as paramter in a method
  Code as data - by passing as function parameter
  
  
Parts of Lambda expression?
  Paramter list (optional)
  Lambda arrow operator (separates listed params and expression body)
  Lambda expression body (the code that will be executed)
  
Lamda expression datatype?
  Lamda expression fullfills the purpose of passing as code
  The datatype of Lamda expression is a functional interface
  
  
 
