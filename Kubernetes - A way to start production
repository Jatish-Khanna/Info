
What containers brings to Us?
  1) Protability
  2) High boot up time 
  3) Lower resource requirements when compared to VM
  4) Easy deployment 
  5) Software virtualization over h/w virtualization
  6) Isolation 
  7) Easy scalability and orchestration
   
  Container Orchestration Engine - K8s?
    To automate deploy, scale and manage containerized applications on group of servers
    
      Fault tolerant 
      Availabililty 
      Scalability - in, out, up and down
      Clustering
      Scheduling
      Loadbalancing
      Deployment and rollout or canary

Advanced:
    Service Discovery
    Monitoring 
    Secrets managements

Borg - Propprietry container manager of Google

============================================
Creating A K8s cluster:
  Max. 5000 Nodes per cluster
  - Worker nodes[Minions] are the VMs or physical machines where the actual images are deployed
  - Master - Contoller that supports features for user and worker nodes
  - Pods - In most cases we see one containers per pod but it can have more containers
  - Containers - runtime environments that serve world
  
Master:
  1) API server - gateway of entire cluster, to view and review the metadata though APIs.
    How, kubeclt or UI or other ways to invoke APIs
  
  2) Scheduler - scheduling pods for workers
  
  3) Control manager - 
    Nodes are running, orchestration
  
    a) Node controller
    b) Duplication controller
    c) Service account and Endpoint controller
    d) End point controlelr
  
  4) etcd - Key/Value database to store the metadata and runtime state of cluster








