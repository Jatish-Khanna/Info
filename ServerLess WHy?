
Benefits of Serverless-

1. No server or underlined infrastructure management:No need to install, maintain, administer, any software or runtime
2. Flexible Scaling: Easy application scaling and automatic scaling options
3. Availability: High availability and fault tolerant capacity

4. Speed up the process of cloud Native applications
  - Cloud native applications are used to automate and integrate the concepts of -
  . Microservices - Architectural approaoch for developing an application as collection of small services
    Each service implements business capabilities,
    runs in into own infrastructure
    Communicates it via REST or messaging

  . DevOps - Collabration b/w software developers and IT organization for Continuos delivery
    It has the potential to create a culture and an environment 
    where building, testing and releasing software happens rapidly, frequently and more consistently.
    
    
  . Containers - offers efficiency and same capabilities as compared to VM's
    Each VM can host and execute multiple containers with reserved infrastructure
    
  . CI/CD -Small batches of products to production quickly
    can deliver frequently, at less risk, and get feedback faster from end users.




Features of Function as a Service?
  . You can run discrete functionalities as independent executable functions
  . Servers are abstracted from developers and it scales instantaneuosly and infinitly
  . It is triggered based on events, or predefined schedules
  
Serverless service by AWS-
1. Compute - Lamda
2. Integration - SQS, SNS
3. Monitoring and Auditing - Cloudwatch and Cloudtrail
4. Orchestration - Simple Workflow Service, Step function
5. Proxy - API gateway
6. Analytics - Kinesis, Athena
7. Storage - S3
8. Developer tools - Cloud9, Cloud star, X-Ray, Code commit, Code build, Code deploy, CodePipeline



AWS Lambda- Service that runs your code without managing or provisioning servers

Features-
  . Service that triggers your code in response to an event
  . Service using which you can run code for virtually any type of application 
    or backend service with zero or low administration
  . Service that scales precisely with the size of work
  . Service for which you pay only for the compute time
  . Build in monitoring and scaling 
  . Easy integration with IAM (Identity and access management)
  
  
  Event examples-
    . Change happened in the database
    . Modification in S3
    . Message in Kinesis stream
    . Emails to Simple email service
    . Logs in cloudwatch
    . 


Difference b/w Lamda and EC2 instances-

  EC2 provides customization of underlined infra, OS, N/w facilities
  Lamda makes it easy to execute code in response to an event
  
  
  For EC2 customer is responsible for provisioning, monitoring, design, health
  Lamda provides high availability and easy scaling to your code
  
  Provides an easy to use approach to deploying and scaling web applications
  Triggers lamda functions in response to an event



Amazon Simple Storage Service?
  Durable - 99.99999% - data is replicated over multiple facilities and multiple devices in each facility
  Low cost - Pay for the resource usage
  Availability - Offers 99.99% availability
  Secure - Once data is uploaded it is automatically encrypted and data transfer mechanism is secure over SSL
  High performance - With support of multipart uploads, n/w throughtput and resiliency is maximized
  Scalable - Highly scalable
  
  S3 storage format -
    the data is stored as objects where 
      Object has file data and metadata information
      
  New buckets must have-
    . Globally a unique name for the bucket where Objects will be stored
    . A bucket is associated with each region (good approach is to select region closer to user location)
      that minimizes costs and address regulatory requirements
    
  Objects in S3 bucket-
    . Key-Value pair for storing and retrieving of data
    . Key - name that is associated to Object
    . value - Content that is respectivly stored in the bucket
    . Metadata - Information regarding the content, that has been stored on bucket
    . Access control information - Information regarding the access control to the particular bucket object
    . Version ID - A string which is generated by S3
  
  
==============
Amazon Kinesis-
  is a real time processing service for streaming data at massive scale which collects and process huge streams of 
  data records in realtime
  
  Benefits-
    . Realtime - Kinesis enables you to ingest, buffer, and process streaming data in real-time
    . Fully managed - Kinesis infrastructure is fully managed by AWS
    . Scalable - AWS kinesis is autoscalable and can handle huge amount of data maintaining low latency
    
 Use cases- 
  . Media or video streams
  . Data streams
  . Intermediate storage - that can capture, transform and load data into streams
  . Data analytics - Incoming stream data can be processed using SQL
  
  
  
==================
Inter-process communication for microservices

  Microservices are architectural and organization approach to software development
  - Small software components are defined API that serves business requirements
  
  Why better than monolithic -
    - A single huge service and is tightly coupled
    - Easy scalable when spike 
    - Extending microservices is easy
    - Highly resillient and available when compared to Monolithic
    
    - An application is built as independent component
    - The inter-service communication is done via orgainzational contracts and standard interfaces
    -
Simple Notification Service:
  is a flexible and fully managed messaging and mobile notification service
  SNS is a publisher and subscriber service, where message has been published on the topic and have been consumed
  
  The main advantage of SNS is fan-out where message published on Topic can be fanned-out to multiple consumers
  
  
Simple Queue Service:
  The service which helps to decouple and scale microservices, distributed systems and serverless applications
  This is a fully managed server
  
  . It eliminates the complexity and overhead associated with managing and  operating message oriented middleware
  . Message can be stored, sent and retrieved b/w different components 
  . Provides high availability of data
  . high security and can be integrated easily with IAM-AWS
  . Cost effective: Cost are based on usage and provides significant cost services
  . High scalability of the application
  
  SQS-Standard: Offeres, atleast once delivery and high perfomrance
  SQS-FiFO: The extact order in which messages were sent and at least once delivery
  
  
  
  
  
